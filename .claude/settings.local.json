{
  "permissions": {
    "allow": [
      "Bash(pip install:*)",
      "Bash(pip:*)",
      "Bash(where:*)",
      "Bash(C:\\Users\\dawei\\AppData\\Local\\Programs\\Python\\Python313\\python.exe -m pip:*)",
      "Bash(\"C:\\Users\\dawei\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m pip:*)",
      "Bash(\"C:\\Users\\dawei\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\":*)",
      "WebFetch(domain:github.com)",
      "Bash(mkdir:*)",
      "Bash(dir:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(python:*)",
      "Bash(del:*)",
      "Bash(git init:*)",
      "Bash(git remote:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git filter-branch:*)",
      "Bash(git gc:*)",
      "Bash(timeout:*)",
      "Bash(if exist build rmdir /s /q build)",
      "Bash(if exist dist rmdir /s /q dist)",
      "Bash(InvoiceVision.exe --help)",
      "Bash(taskkill:*)",
      "Bash(claude mcp add context7 --transport stdio --command \"npx -y @upstash/context7-mcp@latest\")",
      "Bash(claude mcp add context7 --transport stdio C:programInvoiceVisionrun_context7.cmd)",
      "Bash(claude mcp list)",
      "Bash(npm install -g @upstash/context7-mcp)",
      "Bash(set USERPROFILE)",
      "Bash(powershell -Command \"Write-Output $env:USERPROFILE\")",
      "Bash(powershell -Command \"Get-ChildItem -Path ''C:\\Users\\dawei'' -Recurse -Force -ErrorAction SilentlyContinue | Where-Object { $_Name -like ''*claude*'' }\")",
      "Bash(claude --version)",
      "Bash(claude status)",
      "Bash(claude config list)",
      "Bash(claude statusline)",
      "Bash(claude statusline --type command --command \"C:\\Users\\dawei\\.claude\\statusline-command.sh\")",
      "Bash(start InvoiceVision.exe)",
      "Bash(xcopy /E /I /Y models distmodels)",
      "Bash(robocopy models distmodels /E /NFL /NDL /NJH /NJS /NC /NS /NP)",
      "Bash(copy ..models*.* models)",
      "Bash(powershell -Command \"Copy-Item -Path ''..\\models\\*'' -Destination ''models\\'' -Recurse -Force\")",
      "Bash(powershell -Command \"Get-ChildItem -Path ''..\\models'' -Recurse | Copy-Item -Destination ''models'' -Force\")",
      "Bash(powershell -Command \"Remove-Item ''models'' -Recurse -Force; New-Item -ItemType Directory -Path ''models'' -Force\")",
      "Bash(powershell -Command \"Remove-Item ''dist'' -Recurse -Force\")",
      "Bash(powershell -Command \"Copy-Item -Path ''models'' -Destination ''dist\\models'' -Recurse -Force\")",
      "Bash(copy offline_config.json dist)",
      "Bash(cp offline_config.json dist/)",
      "Bash(diagnose_exe.exe)",
      "Bash(./diagnose_exe.exe)",
      "Bash(.InvoiceVision.exe)",
      "Bash(cmd /c \"InvoiceVision.exe\")",
      "Bash(powershell -Command \"Start-Process -FilePath ''InvoiceVision.exe'' -Wait -RedirectStandardOutput ''exe_output.txt'' -RedirectStandardError ''exe_error.txt''\")",
      "Bash(powershell -Command \"Start-Process -FilePath ''InvoiceVision.exe'' -Wait -RedirectStandardOutput ''new_exe_output.txt'' -RedirectStandardError ''new_exe_error.txt''\")",
      "Bash(copy resource_utils.py dist )",
      "Bash(copy OCRInvoice.py dist )",
      "Bash(copy ModelManager.py dist )",
      "Bash(copy MainAction.py dist )",
      "Bash(copy PDF2IMG.py dist)",
      "Bash(cp resource_utils.py dist/)",
      "Bash(cp OCRInvoice.py dist/)",
      "Bash(cp ModelManager.py dist/)",
      "Bash(cp MainAction.py dist/)",
      "Bash(cp PDF2IMG.py dist/)",
      "Bash(InvoiceVision.exe)",
      "Bash(./InvoiceVision.exe)",
      "Bash(powershell -Command \"Get-Process | Where-Object { $_Name -eq ''InvoiceVision'' } | Stop-Process -Force\")",
      "Bash(powershell -Command \"Remove-Item -Path dist -Recurse -Force\")",
      "Bash(powershell -Command \"Start-Sleep -Seconds 3; Remove-Item -Path dist -Recurse -Force -ErrorAction SilentlyContinue\")",
      "Bash(./dist/InvoiceVision.exe --help)",
      "Bash(powershell -Command \"Remove-Item ''nul'' -Force\")",
      "Bash(powershell -Command \"Remove-Item ''analyze_ocr_issues.py'', ''build_diagnose.py'', ''build_quick_test.py'', ''detect_all_paddlex_modules.py'', ''diagnose_exe.py'', ''test_debug_features.py'', ''test_debug_simple.py'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Remove-Item ''InvoiceVision_minimal.spec'', ''InvoiceVision_simple.spec'', ''diagnose_exe.spec'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Remove-Item ''version.txt'', ''version_info.txt'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Remove-Item ''pyinstaller_hooks\\hook-jaraco.py'', ''pyinstaller_hooks\\hook-pkg_resources.py'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Remove-Item ''test_amount_extraction.py'' -Force\")",
      "Bash(cat \"C:\\Users\\dawei\\AppData\\Roaming\\Python\\Python313\\site-packages\\paddlex\\.version\")",
      "Bash(powershell -Command \"Get-Process | Where-Object { $_ame -eq ''InvoiceVision'' } | Stop-Process -Force\")",
      "Bash(powershell -Command \"Remove-Item -Path dist -Recurse -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Get-Process | Where-Object { $_ProcessName -like ''*python*'' -or $_ProcessName -like ''*PyInstaller*'' }\")",
      "Bash(if exist distInvoiceVision.exe echo \"Executable exists\")",
      "Bash(powershell -Command \"if (Test-Path ''dist\\InvoiceVision.exe'') { Write-Output ''Executable exists''; Get-ChildItem ''dist\\InvoiceVision.exe'' } else { Write-Output ''Executable not found''; if (Test-Path ''dist'') { Get-ChildItem ''dist'' } else { Write-Output ''dist folder not found'' } }\")",
      "Bash(powershell -Command \"if (Test-Path ''dist\\InvoiceVision.exe'') { ./dist/InvoiceVision.exe --help } else { Write-Output ''Build still in progress or failed. Checking if build process completed...'' }\")",
      "Bash(powershell -Command \"Get-Process | Where-Object { $_ProcessName -eq ''InvoiceVision'' } | Stop-Process -Force\")",
      "Bash(powershell -Command \"if (Test-Path ''dist\\InvoiceVision.exe'') { Start-Process -FilePath ''dist\\InvoiceVision.exe'' -ArgumentList ''--help'' -Wait -RedirectStandardOutput ''detailed_error.txt'' -RedirectStandardError ''detailed_error.txt'' 2>&1 }\")",
      "Bash(docker build -t invoice-vision:latest .)",
      "Bash(docker --version)",
      "Bash(powershell -Command \"Start-Process ''C:\\Program Files\\Docker\\Docker\\Docker Desktop.exe'' -WindowStyle Hidden\")",
      "Bash(powershell -Command \"Get-Service | Where-Object {$_Name -like ''*docker*''}\")",
      "Bash(start \"\" \"C:\\Program Files\\Docker\\Docker\\Docker Desktop.exe\")",
      "Bash(powershell -Command \"Start-Sleep -Seconds 10\")",
      "Bash(docker run --rm -it -v \"$PWD/input:/app/input\" -v \"$PWD/output:/app/output\" -v \"$PWD/models:/app/models\" invoice-vision:latest python --version)",
      "Bash(winpty docker run --rm -v \"$PWD/input:/app/input\" -v \"$PWD/output:/app/output\" -v \"$PWD/models:/app/models\" invoice-vision:latest python --version)",
      "Bash(docker run --rm -v \"$PWD/input:/app/input\" -v \"$PWD/output:/app/output\" -v \"$PWD/models:/app/models\" invoice-vision:latest python --version)",
      "Bash(docker run --rm -v \"$PWD/input:/app/input\" -v \"$PWD/output:/app/output\" -v \"$PWD/models:/app/models\" invoice-vision:latest python -c \"import paddleocr; print(''PaddleOCR imported successfully'')\")",
      "Bash(powershell -Command \"Remove-Item ''start-menu.bat'' -Force\")",
      "Bash(docker build -f Dockerfile.minimal -t invoice-vision-test:latest .)",
      "Bash(powershell -Command \"Start-Sleep -Seconds 30\")",
      "Bash(docker run --rm -d -p 8080:8080 -v \"$PWD/input:/app/input\" -v \"$PWD/output:/app/output\" -v \"$PWD/models:/app/models\" --name invoice-vision-test invoice-vision:latest)",
      "Bash(docker logs invoice-vision-test)",
      "Bash(docker stop invoice-vision-test)",
      "Bash(docker kill invoice-vision-test)",
      "Bash(powershell -Command \"Get-Process | Where-Object { $_ProcessName -eq ''Docker Desktop'' } | Stop-Process -Force\")",
      "Bash(docker build -t zhugua/invoicevision:0.10 -t zhugua/invoicevision:latest .)",
      "Bash(docker login)",
      "Bash(docker push zhugua/invoicevision:0.10)",
      "Bash(docker push zhugua/invoicevision:latest)",
      "Bash(docker pull zhugua/invoicevision:0.10)",
      "Bash(powershell -Command \"Remove-Item ''nul'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Remove-Item ''PROJECT_STRUCTURE.md'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Remove-Item ''EXTERNAL_MODELS.md'' -Force -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"docker run --rm zhugua/invoicevision:0.10 ls -la /app/\")",
      "Bash(powershell -Command \"docker run --rm -v ''$PWD:/host'' zhugua/invoicevision:0.10 cp -r /app/static /host/\")",
      "Bash(powershell -Command \"docker run --rm -v ''$PWD:/host'' zhugua/invoicevision:0.10 cp -r /app/templates /host/\")",
      "Bash(powershell -Command \"docker run --rm zhugua/invoicevision:0.10 find /app -name ''*GUIDE*'' -o -name ''*DOCKER*''\")",
      "WebSearch",
      "Bash(powershell:*)",
      "Bash(D:\\InvoiceVision\\python-embed\\python.exe:*)",
      "Bash(cmd /c:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}